<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.19.0210.2231                               -->
<workbook source-build='10.0.22 (10000.19.0210.2231)' source-platform='win' version='10.0' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='SalesDistribution' path='/t/analyticshema/workbooks' revision='1.0' site='analyticshema' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Multiple Connections)' inline='true' name='federated.0w1kz831qp16sm10oglbs1m84ae7' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Orders 2016' name='excel-direct.19jsjyw1xeegsw1cpbn1o0em48ij'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\kumar\Downloads\Tableau\getting_started_data_sets\Global Superstore Orders 2016.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Global Superstore Returns 2016' name='textscan.137j10004rf4bz14p1gda0dfu7q0'>
            <connection class='textscan' directory='C:/Users/kumar/Downloads/Tableau/getting_started_data_sets' filename='Global Superstore Returns 2016.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.19jsjyw1xeegsw1cpbn1o0em48ij' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='string' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.137j10004rf4bz14p1gda0dfu7q0' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_NZ' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Global Superstore Returns 2016.csv].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_NZ&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Angola, Argentina, Australia and 38 more&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Republic of the Congo&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Distribution center' datatype='string' name='[Order ID - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0w1kz831qp16sm10oglbs1m84ae7].[Order ID]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
      </column>
      <column datatype='integer' default-format='*0000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Small Office Supplies&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Products'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Hema\Study Doc\Tableau\Sales Dsitribution.tde' schema='Extract' tablename='Extract' update-time='08/22/2019 12:37:21 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Category]' value='[Extract].[Category]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country (group)]' value='[Extract].[Country (group)]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[Customer ID]' value='[Extract].[Customer ID]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[Market]' value='[Extract].[Market]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Extract].[Order ID]' />
            <map key='[Order ID - Split 1]' value='[Extract].[Order ID - Split 1]' />
            <map key='[Order ID]' value='[Extract].[Order ID1]' />
            <map key='[Order Priority]' value='[Extract].[Order Priority]' />
            <map key='[Postal Code]' value='[Extract].[Postal Code]' />
            <map key='[Product ID]' value='[Extract].[Product ID]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Quantity]' value='[Extract].[Quantity]' />
            <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Extract].[Region]' />
            <map key='[Region]' value='[Extract].[Region1]' />
            <map key='[Returned]' value='[Extract].[Returned]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Segment]' value='[Extract].[Segment]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[Shipping Cost]' value='[Extract].[Shipping Cost]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Sub-Category (group)]' value='[Extract].[Sub-Category (group)]' />
            <map key='[Sub-Category]' value='[Extract].[Sub-Category]' />
          </cols>
          <calculations>
            <calculation column='[Country (group)]' formula='CASE [Country]&#10;  WHEN &quot;Angola&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Argentina&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Australia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Bolivia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Botswana&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Brazil&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Burundi&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Cambodia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Cameroon&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Central African Republic&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Chile&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Democratic Republic of the Congo&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Equatorial Guinea&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Ethiopia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Gabon&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Indonesia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Kenya&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Lesotho&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Madagascar&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Malawi&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Malaysia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Mozambique&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Namibia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Papua New Guinea&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Paraguay&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Peru&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Philippines&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Republic of the Congo&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Rwanda&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Singapore&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Somalia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;South Africa&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;South Sudan&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Sri Lanka&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Swaziland&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Tanzania&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Thailand&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Uganda&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Uruguay&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Zambia&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  WHEN &quot;Zimbabwe&quot; THEN &quot;Angola, Argentina, Australia and 38 more&quot;&#10;  ELSE &quot;Other&quot;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Order ID - Split 1]' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
            <calculation column='[Sub-Category (group)]' formula='CASE [Sub-Category]&#10;  WHEN &quot;Art&quot; THEN &quot;Small Office Supplies&quot;&#10;  WHEN &quot;Envelopes&quot; THEN &quot;Small Office Supplies&quot;&#10;  WHEN &quot;Fasteners&quot; THEN &quot;Small Office Supplies&quot;&#10;  WHEN &quot;Labels&quot; THEN &quot;Small Office Supplies&quot;&#10;  WHEN &quot;Paper&quot; THEN &quot;Small Office Supplies&quot;&#10;  WHEN &quot;Supplies&quot; THEN &quot;Small Office Supplies&quot;&#10;  ELSE [Sub-Category]&#10;END' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51290' timestamp-start='2019-08-22 00:37:20.997' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3650</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aachen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwolle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17415</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AA-10315102&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZD-2192596&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>796</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Market</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Market]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Market</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USCA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>51290.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51290.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1430</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-07-08#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>9</ordinal>
              <family>Global Superstore Returns 2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1080</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AE-2014-MY7380138-42004&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZA-2015-SW10350146-42061&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2220</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID - Split 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID - Split 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID - Split 1</remote-alias>
              <ordinal>10</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>91</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID1</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25728</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AE-2012-PO8865138-41184&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZA-2015-TS11205146-42062&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Critical&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Medium&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>632</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3788</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-3174&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-6626&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3788</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28234</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
                <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>178312.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.4765451355039967</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2787663138033745</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2787440991667864</statistic>
                <statistic aggregation='Var' datatype='real'>5.1927759129250193</statistic>
                <statistic aggregation='VarP' datatype='real'>5.1926746694874497</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>886242.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>18</ordinal>
              <family>Global Superstore Returns 2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Caribbean&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2220</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region1</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Canada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>20</ordinal>
              <family>Global Superstore Returns 2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Yes&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yes&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2220</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51290</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27200</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>24</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1464</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-07#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>25</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>26</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16753</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.002</statistic>
                <statistic aggregation='Max' datatype='real'>933.57000000000005</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>27</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&apos;Ajman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zürich&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>28</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Angola, Argentina, Australia and 38 more&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Other&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Category]'>
          <groupfilter function='level-members' level='[Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.593361' group-percentage='0.0477178' measure-ordering='alphabetic' measure-percentage='0.358921' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Category:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Returned' />
        <field-sort-custom-order field='Order ID (Global Superstore Returns 2016.csv)' />
        <field-sort-custom-order field='Region (Global Superstore Returns 2016.csv)' />
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order ID - Split 1' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0w1kz831qp16sm10oglbs1m84ae7'>
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
      </datasources>
      <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]'>
        <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Cross Tab'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0w1kz831qp16sm10oglbs1m84ae7].[yr:Order Date:ok]' ordering-field='[federated.0w1kz831qp16sm10oglbs1m84ae7].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w1kz831qp16sm10oglbs1m84ae7].[pcdf:sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w1kz831qp16sm10oglbs1m84ae7].[:Measure Names]</column>
            <column>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' num-steps='7' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' />
              <text column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0w1kz831qp16sm10oglbs1m84ae7].[mn:Order Date:ok] / [federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk])</rows>
        <cols>([federated.0w1kz831qp16sm10oglbs1m84ae7].[yr:Order Date:ok] / [federated.0w1kz831qp16sm10oglbs1m84ae7].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Break down'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' />
              <lod column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Customer ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]</rows>
        <cols>[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Shipping Cost:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global sales and Profit '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' />
              <size column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Sales:qk]' />
              <lod column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Country:nk]' />
              <lod column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-transparency' value='188' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#a7acad' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w1kz831qp16sm10oglbs1m84ae7].[Latitude (generated)]</rows>
        <cols>[federated.0w1kz831qp16sm10oglbs1m84ae7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0w1kz831qp16sm10oglbs1m84ae7].[yr:Order Date:ok]' ordering-field='[federated.0w1kz831qp16sm10oglbs1m84ae7].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[yr:Order Date:ok]' />
              <tooltip column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[pcdf:sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk] * [federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Sales:qk])</rows>
        <cols>[federated.0w1kz831qp16sm10oglbs1m84ae7].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Sub Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Small Office Supplies&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[Sub-Category (group)]' direction='DESC' using='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Sales:qk]' />
          <sort class='computed' column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' direction='DESC' using='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Sales:qk]' />
          <slices>
            <column>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Sales:qk]</rows>
        <cols>([federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk] / [federated.0w1kz831qp16sm10oglbs1m84ae7].[Sub-Category (group)])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sale Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.0w1kz831qp16sm10oglbs1m84ae7' />
      </datasources>
      <datasource-dependencies datasource='federated.0w1kz831qp16sm10oglbs1m84ae7'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='86266' x='0' y='0'>
                <zone h='50001' id='1' name='Global sales and Profit ' w='86266' x='0' y='0' />
                <zone h='49999' id='8' name='Sales by Sub Category' w='43133' x='0' y='50001' />
                <zone h='49999' id='9' name='Customer Break down' w='43133' x='43133' y='50001' />
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13734' x='86266' y='0'>
                <zone h='18920' id='6' mode='radiolist' name='Global sales and Profit ' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' type='filter' w='13734' x='86266' y='0' />
                <zone h='10980' id='7' name='Global sales and Profit ' pane-specification-id='0' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' type='color' w='13734' x='86266' y='18920' />
                <zone h='7771' id='10' name='Customer Break down' pane-specification-id='0' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' type='shape' w='13734' x='86266' y='29900' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='160' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7602' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='18413' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='7602' />
            <zone h='73309' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='26015'>
              <flipboard active-id='2' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overall, Our Profit looks strong' captured-sheet='Global sales and Profit ' id='1' />
                  <story-point caption='But there are problem areas' captured-sheet='Sale Dashboard' id='2'>
                    <currentDeltas />
                    <capturedDeltas>
                      <worksheet name='Global sales and Profit '>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[mn:Order Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>1</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</field>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Market:nk]</field>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Segment:nk]</field>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Cross Tab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' type='color' />
            <card param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global sales and Profit '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</field>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales by Sub Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Break down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Category:nk]</field>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Returned:nk]</field>
            <field>[federated.0w1kz831qp16sm10oglbs1m84ae7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Sale Dashboard'>
      <viewpoints>
        <viewpoint name='Customer Break down'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global sales and Profit '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Sub Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cross Tab' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer Break down' width='192'>
      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
      jWcCebzX/H/kp5XFUFiHGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global sales and Profit ' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sale Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      M6sXeL+85DcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
